name: Pull Request Check

on: [pull_request]

env:
  GRADLE_VERSION: 8.2

permissions:
  pull-requests: write

jobs:
  check-sample-app-assemble:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app-module:
          - ":sample:qr-code"
          - ":sample:image-capture"
          - ":sample:video-capture"
        app-variant:
          - "Debug"
          - "Release"
    steps:
      # setup
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup-tools
        with:
          java: true
          gradle: true
      # build check
      - name: Build Sample App Apk
        id: build-apk
        run: ./gradlew ${{ matrix.app-module }}:assemble${{matrix.app-variant}}
        continue-on-error: true
      # report
      - name: Report to job summary
        uses: actions/github-script@v6
        env:
          BUILD_APK_OUTCOME: ${{ steps.build-apk.outcome }}
          APP_MODULE: ${{ matrix.app-module }}
          APP_VARIANT: ${{matrix.app-variant}}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const isSuccess = process.env.BUILD_APK_OUTCOME == "success"
            await core.summary
              .addHeading('Sample app build check report')
              .addRaw(`- app:${process.env.APP_MODULE}`)
              .addRaw(`- variant:${process.env.APP_VARIANT}`)
              .addRaw(`- ${isSuccess ? ":white_check_mark: Success" : ":x: Failure"}`)
              .write()
      # TODO upload apk to artifact
      # Error handling
      - name: Error handling
        if: ${{ steps.build-apk.outcome == 'failure' }}
        run: exit 1

  lint-android-lint:
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup-tools
        with:
          java: true
          gradle: true
          reviewdog: true
      # lint check
      - name: Android Lint
        id: android-lint
        run: ./gradlew lintRelease
        continue-on-error: true
      # report
      - name: Comment PR by reviewdog
        run: |
          find ./*/build/reports/android-lint/lintResults.sarif \
            -type f \
            -exec sh -c "cat {} | reviewdog -f=sarif -diff='git diff FETCH_HEAD' -reporter=github-pr-review" \;
      - name: Lint Error Handling
        if: ${{ steps.android-lint.outcome == 'failure' }}
        run: exit 1

  lint-ktlint:
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup-tools
        with:
          java: true
          gradle: true
          reviewdog: true
      # lint check
      - name: Ktlint
        id: ktlint
        run: ./gradlew ktlintCheck
        continue-on-error: true
      # report
      - name: Comment PR by reviewdog
        run: |
          find ./*/build/reports/ktlint/*/*.xml \
            -type f \
            -exec sh -c "cat {} | reviewdog -f=checkstyle -diff='git diff FETCH_HEAD' -reporter=github-pr-review" \;
      - name: Lint Error Handling
        if: ${{ steps.ktlint.outcome == 'failure' }}
        run: exit 1

  dokka:
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup-tools
        with:
          java: true
          gradle: true
      # check generate
      - name: generate dokka documents
        run: ./gradlew dokkaHtml
      # diffがあった場合エラーで終了
      - name: check has new documents
        id: check-documents
        run: git diff --quiet || exit 1
        continue-on-error: true
      # error handling
      - name: Report Error
        if: ${{ steps.check-documents.outcome == 'failure' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: update-document
          message: |+
            ### ❌ ドキュメントを更新する必要があります。

            `./gradlew dokkaHtml` を実行してドキュメントを更新してください。
          recreate: true
      - name: Error Handling
        if: ${{ steps.check-documents.outcome == 'failure' }}
        run: exit 1

  check-publish:
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup-tools
        with:
          java: true
          gradle: true
      - name: Publish to local
        run: ./gradlew publishReleaseToMavenLocal
